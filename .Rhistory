xObs <- c(28,20,32,22,29,27,28,26,21,27,29,23,25)
z1 <- c(1,1,1,1,0,0,0,0,0,0,0,0,0)
z2 <- c(0,0,0,0,1,1,1,1,0,0,0,0,0)
yobs <- c(13.3,8.9,15.1,10.4,13.1,12.4,13.2,11.8,11.5,14.2,15.4,13.1,13.8)
ls()
# b = (xt x)^-1 xt y
length(x0)
length(x2)
# b = (xt x)^-1 xt y
length(x0)
length(xobs)
xObs <- c(28,20,32,22,29,27,28,26,21,27,29,23,25)
z1 <- c(1,1,1,1,0,0,0,0,0,0,0,0,0)
z2 <- c(0,0,0,0,1,1,1,1,0,0,0,0,0)
yobs <- c(13.3,8.9,15.1,10.4,13.1,12.4,13.2,11.8,11.5,14.2,15.4,13.1,13.8)
length(xobs)
xobs <- c(28,20,32,22,29,27,28,26,21,27,29,23,25)
length(xobs)
length(yobs)
length(z1)
length(z2)
x <- matrix(x0,xobs,z1,z2)
x
x
x0
x <- c(x0,xobs,z1,z2)
x
x <- matrix(x,nrow=13,ncol=4)
x
t(x)
# b <-(xtrans x)^-1 xtrans y
b <-(t(x)%*%x)^-1 * t(x) * yobs
tansx <- t(x)
t(x)
x*transx
x%*%transx
tansx <- t(x)
x%*%transx
x
x*x
t(x)*x
xx<-t(x)*x
xx
rm(list = ls())
x <- 10
y <- 12
x+y
sum(x,y)
sum(x+y)
x-y
x*y
x/y
z <- 1:100
z
sum(z)
z
rm(list=ls())
x <- seq(1,5)
y <- c(1,1,2,2,3)
Ad <- seq(1,5)
Sales <- c(1,1,2,2,3)
plot(Ad,Sales,main="Scatter plot of Ad vs Sales",las=1)
plot(Ad,Sales,main="Scatter plot of Ad vs Sales",las=1,cex.main=2)
plot(Ad,Sales,main="Scatter plot of Ad vs Sales",las=1,cex.main=1.5)
plot(Ad,Sales,main="Scatter plot of Ad vs Sales",las=1,cex.main=1.5,col=4,pch=15,cex=2)
plot(Ad,Sales,main="Scatter plot of Ad vs Sales",las=1,cex.main=1.5,col=4,cex=2)
a <- c(1,10)
b <- c(1,3,2,4,6,5,7,5,7,20)
plot(a,b)
a <- seq(1,10)
b <- c(1,3,2,4,6,5,7,5,7,20)
plot(a,b)
legend(10,16,legend = "A")
legend(8,16,legend = "A")
legend(9,18,legend = "A")
legend(9,20,legend = "A")
legend(9,21,legend = "A")
legend(9,20,legend = "A")
a <- seq(1,10)
b <- c(1,3,2,4,6,5,7,5,7,20)
plot(a,b)
legend(9,20,legend = "A")
a <- seq(1,10)
b <- c(1,5,2,7,6,9,8,12,10,20)
plot(a,b)
legend(9,20,legend = "A")
a <- seq(1,10)
b <- c(1,5,2,7,6,9,8,12,10,18)
plot(a,b)
legend(9,20,legend = "A")
a <- seq(1,10)
b <- c(1,5,2,7,6,9,8,12,10,18)
plot(a,b)
legend(9,18,legend = "A")
a <- seq(1,10)
b <- c(1,5,2,7,6,9,8,12,10,18)
plot(a,b,main="A is the leverage point")
legend(9,18,legend = "A")
x <- seq(1,20)
y <- c(2,2,2,2,,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,16,16,16)
y <- c(2,2,2,2,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,16,16,16)
length(y)
x <- seq(1,23)
y <- c(2,2,2,2,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,16,16,16)
length(y)
plot(x,y)
plot(x,y,xlim=c(1,25),ylim=c(1,25))
x1 <- rep(2,5)
x2 <- rep(3,20,2)
x2
x2 <- c(3,20,2)
x2
x2 <- seq(3,20,2)
x3 <- rep(21,5)
y <- x1+x2+x3
y <- c(x1,x2,x3)
x <- seq(1,23)
x1 <- rep(2,5)
x2 <- seq(3,20,2)
x3 <- rep(21,5)
y <- c(x1,x2,x3)
plot(x,y)
length(y)
x <- seq(1,19)
x1 <- rep(2,5)
x2 <- seq(3,20,2)
x3 <- rep(21,5)
y <- c(x1,x2,x3)
plot(x,y)
plot(x,y,xlim=c(1,25),ylim=c(1,25))
plot(x,y,xlim=c(1,25),ylim=c(1,25),pty="l")
rm(list=ls())
a <- "E:/DS/six_month/3rd R/Marinstat R"
setwd(a)
rm(a)
getwd()
head(df)
rm(list=ls())
a <- "E:/DS/six_month/3rd R/Marinstat R"
setwd(a)
rm(a)
df <- read.csv(fiel.choose(),header=T)
df <- read.csv(file.choose(),header=T)
head(df)
d <- df
rm(df)
levels(d$feed)
class(d$feed)
feed <- as.factor(d$feed)
d <- data.frame(d$weight,feed)
rm(feed)
levels(d$)
levels(d$feed)
boxplot(d$weight~d$feed,main="Weight of chicks seperated by feed types",cex.main=1.5,col=c(4,2))
boxplot(d$d.weight~d$feed,main="Weight of chicks seperated by feed types",cex.main=1.5,col=c(4,2))
boxplot(d$d.weight~d$feed,main="Weight of chicks seperated by feed types",cex.main=1.5,col=c(4,2),xlab="Feed",ylab="Weight")
boxplot(d$d.weight~d$feed,main="Weight of chicks seperated by feed types",cex.main=1.5,col=c(4,2),xlab="Feed",ylab="Weight",las=1)
with(d,tapply(d$d.weight,d$feed,mean))
with(d,tapply(d$d.weight,d$feed,median))
test.stat1 <- abs(mean(d$d.weight[d$feed=="casein"])-mean(d$d.weight[d$feed=="meatmeal"]))
test.stat1
test.stat2 <- abs(median(d$d.weight[d$feed=="casein"])-median(d$d.weight[d$feed=="meatmeal"]))
test.stat2
getwd()
t.tes(d$d.weight~d$feed,paired=F,var.eq=F)
t.tets(d$d.weight~d$feed,paired=F,var.eq=F)
t.test(d$d.weight~d$feed,paired=F,var.eq=F)
wilcox.test(d$d.weight[d$feed=="casein"],d$d.weight[d$feed=="meatmeal",paired=F])
set.seed(112358)
n <- length(d$feed)
n
B <- 10000
variable <- d$d.weight
BootstarpSamples <- matrix(sample(variable,size = n*B,replace=T),nrow=n,ncol=B)
BootstarpSamples[1:23]
length(BootstarpSamples)
dim(BootstarpSamples)
BootstrapSamples[1:23,2]
BootstarpSamples[1:23,2]
#------------------------------------------------------
Boot.test.stat1 <- rep(0,B)
Boot.test.stat2 <- rep(0,B)
for (i in 1:B){
Boot.test.stat1[i]<- abs(mean(BootstarpSamples[1:12,i])-mean(BootstarpSamples[13:23,i]))
Boot.test.stat2[i]<- abs(median(BootstarpSamples[1:12,i])-median(BootstarpSamples[13:23,i]))
}
test.stat1;test.stat2;
Boot.test.stat1[1:20]
round(27.1060606,1)
round(27.1060606,3)
round(27.1060606,5)
round(Boot.test.stat1[1:20],1)
round(Boot.test.stat2[1:20],1)
# P-values
# Under set of assumptions, what is the
# probability of getting the observed test statistic or one
# or more extreme, if the null
# hypothesis is True
(Boot.test.stat1>=test.stat1)[1:20]
(Boot.test.stat2>=test.stat2)[1:20]
mean(Boot.test.stat1>=test.stat1)
mean(Boot.test.stat2>=test.stat2)
View(d)
rm(list=ls())
d <- read.table(file.choose(),header=T,sep=",")
class(d$feed)
d <- data.frame(d$weight,as.factor(d$feed))
feed <- as.factor(d$as.factor.d.feed.)
attach(d)
rm(list=ls())
d <- read.table(file.choose(),header=T,sep=",")
feed <- as.factor(d$feed)
attach(d)
df <- data.frame(weight,feed)
head(df)
detach(d)
attach(df)
with(df,tapply(weight,feed,mean))
with(df,tapply(weight,feed,median))
Obs.diff.in.means <- mean(weight[feed=="casein"])-mean(weight[feed=="meatmeal"])
Obs.diff.in.meadian <- median(weight[feed="casein"])-median(weight[feed="meatmeal"])
Obs.diff.in.meadian
levels(feed)
-diff(with(df,tapply(weight,feed,mean)))
-diff(with(df,tapply(weight,feed,median)))
median(weight[feed=="casein"])
median(weight[feed="meatmeal"])
median(weight[feed=="meatmeal"])
median(weight[feed=="casein"])-median(weight[feed=="meatmeal"])
-diff(with(df,tapply(weight,feed,median)))
####################################
######Bootstrap CF##################
####################################
set.seed(13579)
n.c <- 12
n.m <- 11
B <- 10000
Boot.casein <- matrix(sample(weight[feed=="casein"],size=B*n.c,replace=T),ncol=B,nrow=n.c)
Boot.meatmeal <- matrix(sample(weight[feed=="meatmeal"],size=B*n.m,replace=T),ncol=B,nrow=n.m)
Boot.casein[1:12]
Boot.meatmeal[1:20]
dim(Boot.casein);dim(Boot.meatmeal)
Boot.casein[1:5,1:5]
Boot.casein[1:5,1]
Boot.casein[1:5,1:5]
#--------------------
Boot.Diff.In.Means <- colMeans(Boot.casein)-colMeans(Boot.meatmeal)
Boot.Diff.In.Means
length(Boot.Diff.In.Means)
Boot.Diff.In.Means[1:20]
Boot.Diff.In>medians <- apply(Boot.casein,2,median)-apply(Boot.meatmeal,2,median)
Boot.Diff.In.Medians <- apply(Boot.casein,2,median)-apply(Boot.meatmeal,2,median)
Boot.Diff.In.Medians[1:5]
dim(Boot.Diff.In.Medians)
length(Boot.Diff.In.Medians)
# Making the confidence intervals with 95%
#1. Percentile Method 2. Basic Method
#3. Normal Method 4. Bias-Corrected method
quantile(Boot.Diff.In.Means,probs = 0.025)
quantile(Boot.Diff.In.Means,probs = 0.975)
# percentile method for the medians
quantile(Boot.Diff.In.Medians,probs=0.025)
quantile(Boot.Diff.In.Medians,probs=0.975)
rm(list=ls())
getwd()
56-38
d <- read.table(file.choose(),header=T,sep="c")
d <- read.table(file.choose(),header=T,sep=",")
names(d)
View(d)
class(d$feed)
feed <- as.factor(d$feed)
weight <- d$weight
d <- data.frame(weight,feed)
head(d)
class(d$feed)
levels(d$feed)
table(d$feed)
#------------------------------------------main code-------------------
boxplot(d$weight~d$feed,las=1,ylab="Weight(g)",xlab="Feed",main="Weight by Feed",col=c(4,2))
with(d,tapply(d$weight,d$feed,mean))
a <-with(d,tapply(d$weight,d$feed,mean))
source("E:/DS/six_month/3rd R/Marinstat R/4.6_permutation_hypothesis_testing.R", echo=TRUE)
a[,1]
a[1,1]
# abs mean test and abs median test
test.stat1 <- abs(mean(d$weight[d$feed=="casein"])-mean(d$weight[d$feed=="meatmeal"]))
test.stat1
test.stat2 <- abs(median(d$weight[d$feed=="casein"])-median(d$weight[d$feed=="meatmeal"]))
test.stat2
############################
######PERMUTATION TEST######----------------------------------------------------
############################
set.seed(1979)
n <- length(d$feed)
P <- 100000
variable(d$weight)
variable <- d$weight
PerSamples <- matrix(0,nrow=n,ncol=P)
for (i in 1:P){
PerSamples[,1]<- sample(variable,size = n,replace = False)
}
for (i in 1:P){
PerSamples[,1]<- sample(variable,size = n,replace = F)
}
PerSamples[,1:5]
PerSamples <- matrix(0,nrow=n,ncol=P)
PerSamples[,1:5]
for (i in 1:P){
PerSamples[,i]<- sample(variable,size = n,replace = F)
}
PerSamples[,1:5]
# Test Statistics
Perm.test.stat1 <- Perm.test.stat2 <- rep(0,P)
Perm.test.stat1[1:10]
for (i in 1:P){
Perm.test.stat1[i] <- abs(mean(PerSamples[d$feed=="casein"])-mean(PerSamples[d$feed=="meatmeal"]))
Perm.test.stat2[i] <- abs(median(PerSamples[d$feed=="casein"])-median(PerSamples[d$feed=="meatmeal"]))
}
for (i in 1:P){
Perm.test.stat1[i] <- abs(mean(PerSamples[d$feed=="casein",i])-mean(PerSamples[d$feed=="meatmeal",i]))
Perm.test.stat2[i] <- abs(median(PerSamples[d$feed=="casein",i])-median(PerSamples[d$feed=="meatmeal",i]))
}
Perm.test.stat1[1:10]
test.stat1;test.stat2
round(Perm.test.stat1[1:15,1])
round(Perm.test.stat2[1:15,1])
round(Perm.test.stat1[1:15],1)
round(Perm.test.stat2[1:15],1)
(Perm.test.stat1 >= test.stat1)[1:15]
(Perm.test.stat2>=test.stat2)[1:15]
mean(Perm.test.stat1>= test.stat1)
mean(Perm.test.stat2>=test.stat2)
rm(list=ls())
# importing the data
d <- read.table(file.choose(),header=T,sep="\t")
class(d$Before)
class(d$Subject)
d$Subject[1:10]
View(d)
help(t.test)
# test
t.test(d$Before,d$After,mu=0,alternative = "two.sided",paired=T,var.eq=F)
boxplot(d$Before,d$After)
plot(d$Before,d$After)
abline(a=0,b=1)
abline(a=0,b=1,cex=3)
# after then before
t.test(d$After,d$Before,mu=0,alt="two.sided",paried=T,conf=0.99)
# after then before
t.test(d$After,d$Before,mu=0,alt="two.sided",paried=T,conf.level =0.99,var.eq=F)
attach(d)
Before
After
help("wilcox.test")
boxplot(Before,After)
wilcox.test(Before,After,alternative = "two.sided",paired=T,conf.int=T,conf.level=0.99)
wilcox.test(Before,After,mu=0,alternative = "two.sided",paired=T,conf.int=T,conf.level=0.99)
# for approximate p value
wilcox.test(Before,After,mu=0,alt='two.sided',paired=T,conf.int=T,conf.level=0.99,exact = F)
a <- scan()
print(a)
length(a)
d <- read.table(file.choose(),header=T,sep="\t")
head(d)
class(d$Diet)
Diet <- as.factor(d$Diet)
class(Diet)
levels(Diet)
df <- data.frame(WeightLoss,Diet)
rm(a)
rm(d)
class(df)
head(df)
View(df)
rm(list=ls())
d <- read.table(file.choose(),header=T,sep="\t")
WeightLoss <- d$WeightLoss
Diet <- as.factor(d$Diet)
df <- data.frame(WeightLoss,Diet)
View(df)
# ANOVA
boxplot(df$WeightLoss~df$Diet)
attach(df)
aov(WeightLoss~Diet)
ANOVA1<-aov(WeightLoss~Diet)
summary(ANOVA1)
attributes(ANOVA1)
ANOVA1$coefficients
# MULTIPLE COMPARISON TUKEYHSD
TukeyHSD(ANOVA1)
plot(TukeyHSD(ANOVA1))
plot(TukeyHSD(ANOVA1),las=1)
# kruskal test
kruskal.test(WeightLoss~Diet
# kruskal test
kruskal.test(WeightLoss~Diet
)
# kruskal test
kruskal.test(WeightLoss~Diet)
rm(list=ls())
# first import the data
# Lung Capacity Data
df <- read.table(file.choose(),header=T,sep="\t")
names(df)
Smoke <- as.factor(Smoke)
Gender <- as.factor(Gender)
Caesarean <- as.factor(Caesarean)
Caesarean <- as.factor(Caesarean)
head(Caesarean)
class(df$LungCap)
Smoke <- as.factor(Smoke)
Gender <- as.factor(Gender)
attach(df)
Smoke <- as.factor(Smoke)
Gender <- as.factor(Gender)
lcd <- data.frame(LungCap,Age,Height,Smoke,Gender,Caesarean)
rm(df)
rm(Gender)
rm(Smoke)
# imported the required data here
help("Chisquare")
table(Gender,Smoke)
tab <- table(Gender,Smoke)
barplot(tab,beside = T,legend=T)
barplot(tab,beside = T,legend=T,las=1)
barplot(tab,beside = T,legend=T,las=1,col=c(4,2))
barplot(tab,beside = T,legend=T,las=1,col=c(4,2),main="Gender and Smoke")
# the test
chisq.test(tab,correct=T)
# storing the test in an object
Ctest <- chisq.test(tab,correct=T)
attributes(Ctest)
Ctest$method
Ctest$statistic
Ctest$parameter
Ctest$p.value
Ctest$data.name
Ctest$observed
# fisher's Exact test is a non-parametric test
# equivalnet ot Chi-square test
fisher.test(tab,conf.int=T,conf.level = 0.99)
# we will explore the relationship between gender and smoke
tab
new_table <- table(Gender,Smoke)
barplot(new_table,main="barplot of the gender and smoke",col=c(5,3),cex.main=1.5)
barplot(new_table,main="barplot of the gender and smoke",col=c(5,3),cex.main=1.5,las=1)
barplot(new_table,beside = T,main="barplot of the gender and smoke",col=c(5,3),cex.main=1.5,las=1)
barplot(new_table,beside = T,main="barplot of the gender and smoke",col=c(5,3),cex.main=1.5,las=1,legend=T)
# main tests
library(epiR)
epi.2by2(tab,method = "cohort.count",conf.level=0.95)
source("E:/DS/six_month/3rd R/Marinstat R/4.11_odd_ration_relative_risk.R")
#odd ratio interpretation
# the odds of a female not smoking are 0.71 times the odds of a male smoking
0.71^-1
# setting the table in a standard way
tab
tab2 <- matrix(c(314,44,334,33),nrow=2,ncol=2,byrow = F)
tab2
tab2 <- matrix(c(314,44,334,33),nrow=2,ncol=2,byrow = T)
tab2
tab3 <- rbind(tab2[,2],tab2[,1])
colnames(tab3) <- c("Yes","No")
tab3
rownames(tab3) = c("Male","Female")
tab3
# still working on the lung Capacity data loaded in the previous 4.10 file
# we will explore the relationship between gender and smoke
# table of the gender and smoke
tab
new_table <- table(Gender,Smoke)
barplot(new_table,beside = T,main="barplot of the gender and smoke",col=c(5,3),cex.main=1.5,las=1,legend=T)
# main tests
library(epiR)
epi.2by2(tab,method = "cohort.count",conf.level=0.95)
#odd ratio interpretation
# the odds of a female not smoking are 0.71 times the odds of a male smoking
# for the other one
0.71^-1
# setting the table in a standard way
tab
tab2 <- matrix(c(314,44,334,33),nrow=2,ncol=2,byrow = T)
tab2
tab3 <- rbind(tab2[,2],tab2[,1])
colnames(tab3) <- c("Yes","No")
tab3
rownames(tab3) = c(Female","Male")
tab3
rownames(tab3) = c("Female","Male")
tab3
tab2
colnames(tab2) <- c("No","Yes")
rownames(tab2) <- c("Female","Male")
tab2
epi.2by2(tab2,method="cohort.count")
# also working on th lungcapdata
cor(Age,LungCap)
plot(Age,LungCap,main="Age vs LungCap",pch=16,cex=1.5,col=4)
plot(Age,LungCap,main="Age vs LungCap",pch=16,col=4)
abline(h=mean(LungCap))
par(mfrow=c(2,2))
plot(seq(1,100))
par(mfrow=c(1,10)
par(mfrow=c(1,10)0
par(mfrow=c(1,10))
cor(Age,LungCap)
plot(Age,LungCap,main="Age vs LungCap",pch=16,col=4)
plot(Age,LungCap,main="Age vs LungCap",pch=16,col=4)
head(Age)
cor(Age,LungCap)
plot(Age,LungCap)
