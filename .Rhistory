help(read excel)
library(readxl)
LungCapData <- read_excel("E:/DS/six_month/3rd R/Marinstat R/LungCapData.xlsx",
sheet = "Sheet1")
View(LungCapData)
library(readxl)
LungCapData <- read_excel("E:/DS/six_month/3rd R/Marinstat R/LungCapData.xlsx",
sheet = "Sheet1")
View(LungCapData)
LungCapData
library(readxl)
LungCapData <- read_excel("E:/DS/six_month/3rd R/Marinstat R/LungCapData.xlsx",
sheet = "Sheet1", range = "C5:G20")
View(LungCapData)
LungCapData2 <- read_excel("E:/DS/six_month/3rd R/Marinstat R/LungCapData.xlsx",
sheet = "Sheet1", range = "C5:G20")
LungCapData2
LungCapData
Subject <- c("DAve.Andreychuk","Jon.Stewart","Jane.Doe")
Age <- c(53,54,38)
Gender <- c("male","male","female")
Score <- c(80.5,52.1,75.9)
DataToExport <- data.frame(Subject,Age,Gender,Score)
DataToExport
# exporting
write.table(DataToExport,file="ExportecData.csv",sep=",")
View(DataToExport)
# exporting
write.table(DataToExport,file="ExportecData.csv",row.names = F,sep=",")
# exporting
write.table(DataToExport,file="ExportData.csv",row.names = F,sep=",")
# in other directory
with.table(DataToExport,
file="E:/DS/six_month/3rd R/Marinstat R>DataToExport.csv",row.names=F,sep="c"
)
# in other directory
write.table(DataToExport,
file="E:/DS/six_month/3rd R/Marinstat R>DataToExport.csv",row.names=F,sep="c"
)
# in other directory
write.table(DataToExport,
file="E:\DS\six_month\3rd R\Marinstat R>DataToExport.csv",row.names=F,sep="c"
)
# in other directory
write.table(DataToExport,file="E:\DS\six_month\3rd R\Marinstat R>DataToExport.csv",row.names=F,sep="c")
write.csv(DataToExport,file = "DataToExport.csv",row.names=F)
library(readxl)
DataSetOfGas <- read_excel("E:/DS/excel/practice01.xlsx",
sheet = "Sheet1")
View(DataSetOfGas)
library(readxl)
DatasetOfGas <- read_excel("E:/DS?excel?practice01.xlsx",sheet="Sheet1")
DatasetOfGas <- read_excel("E:/DS/excel?practice01.xlsx",sheet="Sheet1")
DatasetOfGas <- read_excel("E:/DS/excel/practice01.xlsx",sheet="Sheet1")
View(DatasetOfGas)
df <- read.csv(file.choose(),header = T)
df
df <- read.csv(file.choose(),header = T)
library(readxl)
LungCapData <- read_excel("E:/DS/six_month/3rd R/Marinstat R/LungCapData.xlsx",
sheet = "LungCapData", col_types = c("numeric",
"numeric", "numeric", "text", "text",
"text"))
View(LungCapData)
library(readxl)
LungCapData <- read_excel("E:/DS/six_month/3rd R/Marinstat R/LungCapData.xlsx",
sheet = "LungCapData", col_types = c("numeric",
"numeric", "numeric", "text", "text",
"text"))
View(LungCapData)
# dim to check the dimension
dim(LungCapData)
t(LungCapData)
#t(LungCapData)
head(LungCapData)
tail(LungCapData) # to see last 6 rows
LungCapData[c(5,6,7),1]
LungCapData[c(5,6,7),]
LungCapData[10:20,]
LungCapData[,20:30]
LungCapData[,1:3]
head(LungCapData[,1:3])
plot(head(LungCapData[,1:3]))
#plot(head(LungCapData[,1:3]))
LungCapData[-c(4:725),]
names(LungCapData) # to see the variable names
rm(LungCapData)
lungCapData <- read.table(file.choose(),header = T,sep="\t")
lungCapData
# mean age of the data
names(lungCapData)
mean(lungCapData[2,])
lungCapData[2,]
mean(lungCapData[,2])
plog(lungCapData[,2])
plot(lungCapData[,2])
boxplot(lungCapData[,2])
mean(lungCapData$Age)
mean(age)
# store age in a variable vector
age <- lungCapData$Age
mean(age)
type(age)
class(age)
hist(age)
mod(age)
mode(age)
median(age)
max(age)
min(age)
summery(age)
names(lungCapData)
age
round(age)
round(mean(age))
length(age)
# Attach is the best way to declair variables in a df
attach(lungCapData)
Age
Height
names(lungCapData)
clas(Smoke)
attach(lungCapData)
Height
class(Height)
class(Smoke)
library(readxl)
LungCapData <- read_excel("E:/DS/six_month/3rd R/Marinstat R/LungCapData.xlsx",
sheet = "LungCapData", col_types = c("numeric",
"numeric", "numeric", "text", "text",
"numeric"))
View(LungCapData)
library(readxl)
LungCapData <- read_excel("E:/DS/six_month/3rd R/Marinstat R/LungCapData.xlsx")
View(LungCapData)
library(readxl)
LungCapData <- read_excel("E:/DS/six_month/3rd R/Marinstat R/LungCapData.xlsx")
View(LungCapData)
attach(lungCapData)
attach(LungCapData)
names(LungCapData)
Age
class(Smoke)
levels(Smoke)
levels(LungCapData$Caesarean)
summary(lungCapData)
summary(LungCapData)
c <- c(1,0,0,1,1,1,0)
class(x)
x <- c(1,0,0,1,1,1,0)
class(x)
rm(c)
summary(x)
x <- as.factor(x)
summary(x)
class(x)
names(LungCapData)
Gender <- as.factor(Gender)
class(Gender)
summary(Gender)
levels(Gender)
sum(Gender)
sum(levels(Gender))
385+367
lcd <- read.table(file.choose(),header=T,sep=",")
lcd <- read.table(file.choose(),header=T,sep=" ")
lcd
lcd <- read.table(file.choose(),header=T,sep="\t")
lcd
names(lcd)
attach(lcd)
LungCap
length(Age)
dim(lcd)
Age[11:20]
mean(Age[11:20])
names(lcd)
class(Smoke)
Smoke <- is.factor(Smoke)
class(Smoke)
summery(Smoke)
summary(Smoke)
Smoke
lcd
names(lcd)
detach(lcd)
attach(lcd)
ls()
rm(Smoke)
lcd
head(lcd)
bottom(lcd)
base(lcd)
length(lcd)
lcd
dim(lcd)
lcd[720:725,]
tail(lcd)
attach(lcd)
Age
Smoke
is.factor(Smoke)
Smoke <- as.factor(Smoke)
class(Smoke)
summary(Smoke)
Age
names(lcd)
Gender <- as.factor(Gender)
mean(Age[Gender=="female"])
mean(Age[Gender=="male"])
hist(Gender)
class(Gender)
summary(Gender)
levels(Gender)
FemaleData <- lcd[Gender=="female"]
FemaleData <- lcd[Gender=="female",]
FemaleData
dim(FemaleData)
MaleData<- lcd[Gender=="male",]
length(FemaleData)+length(MaleData)
length(FemaleData$Age)+length(MaleData$Age)
MaleOverFifty <- MaleData[Age>=50,]
MaleOverFifty
min(MaleData)
min(MaleData[Age,])
min(MaleData[Age,])
min(MaleData$Age)
max(MaleData$Age)
MaleOverFifty <- MaleData[Age>=15,]
MaleOverFifty
MaleOver15 <- lcd[Gender=="male" & Age>=15]
MaleOver15 <- lcd[Gender=="male" & Age>=15,]
MaleOver15
dim(MaleOver15)
head(MaleOver15)
x0 <- rep(1,13)
x0
t(x0)
xObs <- c(28,20,32,22,29,27,28,26,21,27,29,23,25)
z1 <- c(1,1,1,1,0,0,0,0,0,0,0,0,0)
z2 <- c(0,0,0,0,1,1,1,1,0,0,0,0,0)
ls()
rm(ls=ls())
x0 <- rep(1,13)
xObs <- c(28,20,32,22,29,27,28,26,21,27,29,23,25)
z1 <- c(1,1,1,1,0,0,0,0,0,0,0,0,0)
z2 <- c(0,0,0,0,1,1,1,1,0,0,0,0,0)
rm(list = ls())
x0 <- rep(1,13)
xObs <- c(28,20,32,22,29,27,28,26,21,27,29,23,25)
z1 <- c(1,1,1,1,0,0,0,0,0,0,0,0,0)
z2 <- c(0,0,0,0,1,1,1,1,0,0,0,0,0)
yobs <- c(13.3,8.9,15.1,10.4,13.1,12.4,13.2,11.8,11.5,14.2,15.4,13.1,13.8)
ls()
# b = (xt x)^-1 xt y
length(x0)
length(x2)
# b = (xt x)^-1 xt y
length(x0)
length(xobs)
xObs <- c(28,20,32,22,29,27,28,26,21,27,29,23,25)
z1 <- c(1,1,1,1,0,0,0,0,0,0,0,0,0)
z2 <- c(0,0,0,0,1,1,1,1,0,0,0,0,0)
yobs <- c(13.3,8.9,15.1,10.4,13.1,12.4,13.2,11.8,11.5,14.2,15.4,13.1,13.8)
length(xobs)
xobs <- c(28,20,32,22,29,27,28,26,21,27,29,23,25)
length(xobs)
length(yobs)
length(z1)
length(z2)
x <- matrix(x0,xobs,z1,z2)
x
x
x0
x <- c(x0,xobs,z1,z2)
x
x <- matrix(x,nrow=13,ncol=4)
x
t(x)
# b <-(xtrans x)^-1 xtrans y
b <-(t(x)%*%x)^-1 * t(x) * yobs
tansx <- t(x)
t(x)
x*transx
x%*%transx
tansx <- t(x)
x%*%transx
x
x*x
t(x)*x
xx<-t(x)*x
xx
rm(list = ls())
x <- 10
y <- 12
x+y
sum(x,y)
sum(x+y)
x-y
x*y
x/y
z <- 1:100
z
sum(z)
z
rm(list=ls())
x <- seq(1,5)
y <- c(1,1,2,2,3)
Ad <- seq(1,5)
Sales <- c(1,1,2,2,3)
plot(Ad,Sales,main="Scatter plot of Ad vs Sales",las=1)
plot(Ad,Sales,main="Scatter plot of Ad vs Sales",las=1,cex.main=2)
plot(Ad,Sales,main="Scatter plot of Ad vs Sales",las=1,cex.main=1.5)
plot(Ad,Sales,main="Scatter plot of Ad vs Sales",las=1,cex.main=1.5,col=4,pch=15,cex=2)
plot(Ad,Sales,main="Scatter plot of Ad vs Sales",las=1,cex.main=1.5,col=4,cex=2)
a <- c(1,10)
b <- c(1,3,2,4,6,5,7,5,7,20)
plot(a,b)
a <- seq(1,10)
b <- c(1,3,2,4,6,5,7,5,7,20)
plot(a,b)
legend(10,16,legend = "A")
legend(8,16,legend = "A")
legend(9,18,legend = "A")
legend(9,20,legend = "A")
legend(9,21,legend = "A")
legend(9,20,legend = "A")
a <- seq(1,10)
b <- c(1,3,2,4,6,5,7,5,7,20)
plot(a,b)
legend(9,20,legend = "A")
a <- seq(1,10)
b <- c(1,5,2,7,6,9,8,12,10,20)
plot(a,b)
legend(9,20,legend = "A")
a <- seq(1,10)
b <- c(1,5,2,7,6,9,8,12,10,18)
plot(a,b)
legend(9,20,legend = "A")
a <- seq(1,10)
b <- c(1,5,2,7,6,9,8,12,10,18)
plot(a,b)
legend(9,18,legend = "A")
a <- seq(1,10)
b <- c(1,5,2,7,6,9,8,12,10,18)
plot(a,b,main="A is the leverage point")
legend(9,18,legend = "A")
x <- seq(1,20)
y <- c(2,2,2,2,,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,16,16,16)
y <- c(2,2,2,2,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,16,16,16)
length(y)
x <- seq(1,23)
y <- c(2,2,2,2,2,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,16,16,16)
length(y)
plot(x,y)
plot(x,y,xlim=c(1,25),ylim=c(1,25))
x1 <- rep(2,5)
x2 <- rep(3,20,2)
x2
x2 <- c(3,20,2)
x2
x2 <- seq(3,20,2)
x3 <- rep(21,5)
y <- x1+x2+x3
y <- c(x1,x2,x3)
x <- seq(1,23)
x1 <- rep(2,5)
x2 <- seq(3,20,2)
x3 <- rep(21,5)
y <- c(x1,x2,x3)
plot(x,y)
length(y)
x <- seq(1,19)
x1 <- rep(2,5)
x2 <- seq(3,20,2)
x3 <- rep(21,5)
y <- c(x1,x2,x3)
plot(x,y)
plot(x,y,xlim=c(1,25),ylim=c(1,25))
plot(x,y,xlim=c(1,25),ylim=c(1,25),pty="l")
rm(list=ls())
a <- "E:/DS/six_month/3rd R/Marinstat R"
setwd(a)
rm(a)
getwd()
head(df)
rm(list=ls())
a <- "E:/DS/six_month/3rd R/Marinstat R"
setwd(a)
rm(a)
df <- read.csv(fiel.choose(),header=T)
df <- read.csv(file.choose(),header=T)
head(df)
d <- df
rm(df)
levels(d$feed)
class(d$feed)
feed <- as.factor(d$feed)
d <- data.frame(d$weight,feed)
rm(feed)
levels(d$)
levels(d$feed)
boxplot(d$weight~d$feed,main="Weight of chicks seperated by feed types",cex.main=1.5,col=c(4,2))
boxplot(d$d.weight~d$feed,main="Weight of chicks seperated by feed types",cex.main=1.5,col=c(4,2))
boxplot(d$d.weight~d$feed,main="Weight of chicks seperated by feed types",cex.main=1.5,col=c(4,2),xlab="Feed",ylab="Weight")
boxplot(d$d.weight~d$feed,main="Weight of chicks seperated by feed types",cex.main=1.5,col=c(4,2),xlab="Feed",ylab="Weight",las=1)
with(d,tapply(d$d.weight,d$feed,mean))
with(d,tapply(d$d.weight,d$feed,median))
test.stat1 <- abs(mean(d$d.weight[d$feed=="casein"])-mean(d$d.weight[d$feed=="meatmeal"]))
test.stat1
test.stat2 <- abs(median(d$d.weight[d$feed=="casein"])-median(d$d.weight[d$feed=="meatmeal"]))
test.stat2
getwd()
t.tes(d$d.weight~d$feed,paired=F,var.eq=F)
t.tets(d$d.weight~d$feed,paired=F,var.eq=F)
t.test(d$d.weight~d$feed,paired=F,var.eq=F)
wilcox.test(d$d.weight[d$feed=="casein"],d$d.weight[d$feed=="meatmeal",paired=F])
set.seed(112358)
n <- length(d$feed)
n
B <- 10000
variable <- d$d.weight
BootstarpSamples <- matrix(sample(variable,size = n*B,replace=T),nrow=n,ncol=B)
BootstarpSamples[1:23]
length(BootstarpSamples)
dim(BootstarpSamples)
BootstrapSamples[1:23,2]
BootstarpSamples[1:23,2]
#------------------------------------------------------
Boot.test.stat1 <- rep(0,B)
Boot.test.stat2 <- rep(0,B)
for (i in 1:B){
Boot.test.stat1[i]<- abs(mean(BootstarpSamples[1:12,i])-mean(BootstarpSamples[13:23,i]))
Boot.test.stat2[i]<- abs(median(BootstarpSamples[1:12,i])-median(BootstarpSamples[13:23,i]))
}
test.stat1;test.stat2;
Boot.test.stat1[1:20]
round(27.1060606,1)
round(27.1060606,3)
round(27.1060606,5)
round(Boot.test.stat1[1:20],1)
round(Boot.test.stat2[1:20],1)
# P-values
# Under set of assumptions, what is the
# probability of getting the observed test statistic or one
# or more extreme, if the null
# hypothesis is True
(Boot.test.stat1>=test.stat1)[1:20]
(Boot.test.stat2>=test.stat2)[1:20]
mean(Boot.test.stat1>=test.stat1)
mean(Boot.test.stat2>=test.stat2)
View(d)
rm(list=ls())
d <- read.table(file.choose(),header=T,sep=",")
class(d$feed)
d <- data.frame(d$weight,as.factor(d$feed))
feed <- as.factor(d$as.factor.d.feed.)
attach(d)
rm(list=ls())
d <- read.table(file.choose(),header=T,sep=",")
feed <- as.factor(d$feed)
attach(d)
df <- data.frame(weight,feed)
head(df)
detach(d)
attach(df)
with(df,tapply(weight,feed,mean))
with(df,tapply(weight,feed,median))
Obs.diff.in.means <- mean(weight[feed=="casein"])-mean(weight[feed=="meatmeal"])
Obs.diff.in.meadian <- median(weight[feed="casein"])-median(weight[feed="meatmeal"])
Obs.diff.in.meadian
levels(feed)
-diff(with(df,tapply(weight,feed,mean)))
-diff(with(df,tapply(weight,feed,median)))
median(weight[feed=="casein"])
median(weight[feed="meatmeal"])
median(weight[feed=="meatmeal"])
median(weight[feed=="casein"])-median(weight[feed=="meatmeal"])
-diff(with(df,tapply(weight,feed,median)))
####################################
######Bootstrap CF##################
####################################
set.seed(13579)
n.c <- 12
n.m <- 11
B <- 10000
Boot.casein <- matrix(sample(weight[feed=="casein"],size=B*n.c,replace=T),ncol=B,nrow=n.c)
Boot.meatmeal <- matrix(sample(weight[feed=="meatmeal"],size=B*n.m,replace=T),ncol=B,nrow=n.m)
Boot.casein[1:12]
Boot.meatmeal[1:20]
dim(Boot.casein);dim(Boot.meatmeal)
Boot.casein[1:5,1:5]
Boot.casein[1:5,1]
Boot.casein[1:5,1:5]
#--------------------
Boot.Diff.In.Means <- colMeans(Boot.casein)-colMeans(Boot.meatmeal)
Boot.Diff.In.Means
length(Boot.Diff.In.Means)
Boot.Diff.In.Means[1:20]
Boot.Diff.In>medians <- apply(Boot.casein,2,median)-apply(Boot.meatmeal,2,median)
Boot.Diff.In.Medians <- apply(Boot.casein,2,median)-apply(Boot.meatmeal,2,median)
Boot.Diff.In.Medians[1:5]
dim(Boot.Diff.In.Medians)
length(Boot.Diff.In.Medians)
# Making the confidence intervals with 95%
#1. Percentile Method 2. Basic Method
#3. Normal Method 4. Bias-Corrected method
quantile(Boot.Diff.In.Means,probs = 0.025)
quantile(Boot.Diff.In.Means,probs = 0.975)
# percentile method for the medians
quantile(Boot.Diff.In.Medians,probs=0.025)
quantile(Boot.Diff.In.Medians,probs=0.975)
